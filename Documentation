Mini Social Media Platform Documentation
1. Project Overview
   Project Name: Mini Social Media Platform

Technologies Used:

 Frontend: HTML, CSS, JavaScript
 Backend: Java, Maven, Spring Boot (if used)
 Database: MySQL
 IDE: IntelliJ IDEA
 Purpose:
 A mini social media platform allowing users to create accounts, post updates, view posts, and interact with others.

Key Features:

User registration and login.
Post creation, editing, and deletion.
Viewing and liking posts.
User profile management.


2. Functional Requirements
User Module:

Register, Login, Logout.
View and update profile information.
Post Module:

Create a new post with text and media.
Edit and delete existing posts.
Like and comment on posts.
Admin Module:

View all user accounts and posts.
Moderate inappropriate content.


3. Non-Functional Requirements
Performance: The system should handle up to 100 concurrent users.
Security: Passwords are encrypted, and data is secured against SQL injection.
Scalability: Designed to accommodate additional features in the future.


4. System Architecture
Architecture Style: Layered Architecture

Components:

Frontend: Handles user interaction and sends requests to the backend.
Backend: Processes requests and manages business logic.
Database: Stores user data, posts, and interactions.
Diagram:
(Attach a system architecture diagram, e.g., UML or flowchart)

5. Database Design
Tables:

Users: Stores user details.
Posts: Stores posts made by users.
Likes: Tracks which users liked which posts.
Comments: Tracks comments on posts.
ER Diagram:
(Include an Entity-Relationship Diagram showing table relationships)


7. Installation and Setup
Pre-requisites:

Java installed on the system.
MySQL Server running.
IntelliJ IDEA or any preferred IDE.
Steps:

Clone the repository: git clone <repository-url>
Import the project into IntelliJ IDEA.
Configure the application.properties file with your database credentials:
properties
Copy code
spring.datasource.url=jdbc:mysql://localhost:3306/social_media
spring.datasource.username=root
spring.datasource.password=yourpassword
Run the application using Maven: mvn spring-boot:run.
Access the Application:

Frontend: Open index.html in your browser.
Backend APIs: Access via tools like Postman.

8. Testing
Unit Testing:
Test cases for service and DAO layers using JUnit and Mockito.
Integration Testing:
Testing API endpoints with Postman.

9. Future Enhancements
Add a messaging feature for users to chat.
Implement real-time notifications.
Introduce a recommendation system for suggested friends or posts.